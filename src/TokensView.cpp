//
//  Copyright (c) 2023, Alexander Hude
//  All rights reserved.
//

#include "Inkplate.h"
#include "Fonts/FreeSansBoldOblique24pt7b.h"
#include "Fonts/FreeSerifBoldItalic24pt7b.h"
#include "Fonts/FreeSansBold12pt7b.h"

#include "EventManagerDelegate.hpp"
#include "ProfileManagerDelegate.hpp"
#include "TokensView.hpp"
#include "helper.hpp"

const unsigned char TokensView::s_backIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 
	0xfe, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x70, 0xff, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x30, 
	0xff, 0xc0, 0x03, 0xff, 0xff, 0xfe, 0x00, 0x30, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0x00, 0x30, 
	0xff, 0xf8, 0x03, 0xff, 0xff, 0xff, 0x00, 0x30, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0x80, 0x30, 
	0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x80, 0x30, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0x00, 0x30, 
	0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0x00, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x30, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x70, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x70, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x70, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x01, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x03, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x07, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_tokenParentHelpIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x40, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xc0, 
	0xff, 0xff, 0x87, 0xf8, 0x7f, 0xff, 0xc3, 0xc0, 0xff, 0xfe, 0x03, 0xe0, 0x38, 0x0f, 0x8f, 0xc0, 
	0xff, 0xfc, 0x71, 0xc7, 0x20, 0x00, 0x1f, 0xc0, 0xff, 0xf0, 0xf9, 0x0f, 0x07, 0xf0, 0x7f, 0xc0, 
	0xff, 0xe3, 0xf8, 0x3f, 0x0f, 0xff, 0xff, 0xc0, 0xff, 0x87, 0xf8, 0x7c, 0x3f, 0xff, 0xff, 0xc0, 
	0xff, 0x1f, 0xe1, 0xf8, 0xff, 0xff, 0xff, 0xc0, 0xfe, 0x3f, 0xc7, 0xe1, 0xff, 0xff, 0xff, 0xc0, 
	0xfc, 0xff, 0x0f, 0xc7, 0xf9, 0xff, 0xff, 0xc0, 0xf9, 0xfe, 0x3f, 0x0f, 0xf1, 0xff, 0xff, 0xc0, 
	0xf9, 0xf8, 0x7c, 0x1f, 0xc3, 0xff, 0xff, 0xc0, 0xf9, 0xf1, 0xf8, 0x9f, 0x8f, 0xff, 0xff, 0xc0, 
	0xf3, 0xf3, 0xfd, 0xce, 0x1f, 0xff, 0xff, 0xc0, 0xf3, 0xf3, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xc0, 
	0xf3, 0xf3, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xc0, 0xf3, 0xf3, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xc0, 
	0xe7, 0xf3, 0xff, 0x8f, 0xdf, 0xff, 0xff, 0xc0, 0xc7, 0xe7, 0xfe, 0x1f, 0x0f, 0xff, 0xff, 0x80, 
	0x0f, 0xc7, 0xfc, 0x7e, 0x3f, 0xff, 0xff, 0x10, 0x3f, 0xcf, 0xf8, 0xf8, 0x7f, 0xff, 0xfe, 0x70, 
	0x3f, 0xff, 0xf3, 0xf1, 0xfb, 0xff, 0xfc, 0xf0, 0x3f, 0xff, 0xf3, 0xc3, 0xe3, 0xff, 0xf8, 0xf0, 
	0x3f, 0xff, 0xf9, 0x0f, 0xc7, 0xff, 0xf1, 0xf0, 0x3f, 0xff, 0xf8, 0x1f, 0x0f, 0xff, 0xe3, 0xf0, 
	0x3f, 0xff, 0xfc, 0x7e, 0x3f, 0xff, 0x8f, 0xf0, 0x3f, 0xff, 0xf9, 0xf8, 0x7c, 0x7f, 0x1f, 0xf0, 
	0x3f, 0xff, 0xf9, 0xe1, 0xf8, 0xfc, 0x3f, 0xf0, 0x3f, 0xff, 0xf9, 0xc7, 0xe1, 0xf0, 0xff, 0xf0, 
	0x3f, 0xff, 0xf8, 0x0f, 0xc7, 0xe3, 0xff, 0xf0, 0x3f, 0xff, 0xf4, 0x1f, 0x0f, 0x87, 0xff, 0xf0, 
	0x3f, 0xff, 0x07, 0xcc, 0x1f, 0x1f, 0xff, 0xf0, 0x3f, 0xf8, 0x0f, 0xc0, 0x9c, 0x3f, 0xff, 0xf0, 
	0x3f, 0xe0, 0xff, 0xe1, 0x80, 0xff, 0xff, 0xf0, 0x3f, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xf0, 
	0x3f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0x38, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x21, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_tokenEducationIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xf0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xf0, 
	0xff, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 
	0xff, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 
	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 
	0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0xf3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 
	0xf1, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0xf1, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 
	0xf1, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0xf1, 0xff, 0x80, 0x00, 0x00, 0x07, 0xff, 0xf0, 
	0xf1, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0xf1, 0xfc, 0xf0, 0x00, 0x00, 0x3d, 0xff, 0xf0, 
	0xf1, 0xfc, 0x3c, 0x00, 0x00, 0xf1, 0xff, 0xf0, 0xe0, 0xfc, 0x1e, 0x00, 0x03, 0xc1, 0xff, 0xf0, 
	0xe0, 0xfc, 0x07, 0x80, 0x07, 0x81, 0xff, 0xf0, 0xe0, 0xfc, 0x03, 0xc0, 0x1e, 0x01, 0xff, 0xf0, 
	0xe0, 0xfe, 0x00, 0xf0, 0x38, 0x03, 0xff, 0xf0, 0xf9, 0xfe, 0x00, 0x3c, 0xf0, 0x03, 0xff, 0xf0, 
	0xff, 0x7e, 0x00, 0x1f, 0xc0, 0x03, 0xff, 0xf0, 0xc0, 0x7f, 0x00, 0x07, 0x00, 0x07, 0xff, 0xf0, 
	0xc0, 0x3f, 0x80, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0x80, 0x3f, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xf0, 
	0x81, 0x3f, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0x91, 0x1f, 0xf0, 0x00, 0x00, 0x7f, 0xff, 0xf0, 
	0x11, 0x1f, 0xfc, 0x00, 0x01, 0xff, 0xff, 0xf0, 0xd1, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_tokenCreativityIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xcf, 0xff, 0xf9, 0xff, 0xff, 0x3f, 0xf0, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xf0, 
	0xff, 0xe3, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xf0, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xf0, 
	0xff, 0xf8, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xf0, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xe3, 0xff, 0xf0, 
	0xff, 0xfe, 0x7f, 0xc0, 0x3f, 0xe7, 0xff, 0xf0, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xfc, 0x3f, 0xc3, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xf1, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xf1, 0xfc, 0x38, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xe7, 0xfc, 0x0c, 0x7f, 0xff, 0xf0, 
	0xff, 0xff, 0xc7, 0xff, 0x86, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0x8f, 0xff, 0xe3, 0x3f, 0xff, 0xf0, 
	0xff, 0xff, 0x9f, 0xff, 0xf1, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x9f, 0xff, 0xf9, 0x9f, 0xff, 0xf0, 
	0xff, 0xff, 0x1f, 0xff, 0xf9, 0x9f, 0xff, 0xf0, 0xff, 0xff, 0x3f, 0xff, 0xfc, 0x8f, 0xff, 0xf0, 
	0xff, 0xff, 0x3f, 0xff, 0xfc, 0xcf, 0xff, 0xf0, 0xc0, 0x1f, 0x3f, 0xff, 0xfd, 0xcf, 0x00, 0x70, 
	0xe0, 0x1f, 0x3f, 0xff, 0xff, 0xcf, 0x80, 0x70, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xcf, 0xff, 0xf0, 
	0xff, 0xff, 0x1f, 0xff, 0xff, 0x9f, 0xff, 0xf0, 0xff, 0xff, 0x9f, 0xff, 0xff, 0x9f, 0xff, 0xf0, 
	0xff, 0xff, 0x9f, 0xff, 0xff, 0x9f, 0xff, 0xf0, 0xff, 0xff, 0x8f, 0xff, 0xff, 0x3f, 0xff, 0xf0, 
	0xff, 0xff, 0xcf, 0xff, 0xfe, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0xc7, 0xff, 0xfe, 0x7f, 0xff, 0xf0, 
	0xff, 0xff, 0xe3, 0xff, 0xfc, 0x7f, 0xff, 0xf0, 0xff, 0xff, 0xf1, 0xff, 0xf8, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xf9, 0xff, 0xf9, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0xff, 0xf3, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xfc, 0xff, 0xf3, 0xef, 0xff, 0xf0, 0xff, 0xfe, 0x7c, 0xff, 0xe3, 0xe7, 0xff, 0xf0, 
	0xff, 0xfc, 0x7c, 0x7f, 0xe7, 0xe3, 0xff, 0xf0, 0xff, 0xf8, 0xfe, 0x7f, 0xe7, 0xf1, 0xff, 0xf0, 
	0xff, 0xf1, 0xfe, 0x7f, 0xe7, 0xf8, 0xff, 0xf0, 0xff, 0xe3, 0xfe, 0x00, 0x07, 0xfc, 0x7f, 0xf0, 
	0xff, 0xc7, 0xfe, 0x00, 0x07, 0xfe, 0x3f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_tokenHousekeepingIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xf0, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0x99, 0xff, 0xf0, 
	0xff, 0xff, 0xf8, 0x0f, 0xff, 0x99, 0xff, 0xf0, 0xff, 0xff, 0x01, 0xc7, 0xff, 0x99, 0xff, 0xf0, 
	0xff, 0xfe, 0x03, 0xe0, 0xff, 0x99, 0xff, 0xf0, 0xff, 0xfe, 0x77, 0xe0, 0x3f, 0x99, 0xff, 0xf0, 
	0xff, 0xfc, 0x7f, 0xff, 0x1f, 0x99, 0xff, 0xf0, 0xff, 0xf0, 0xff, 0xff, 0x9f, 0x99, 0xff, 0xf0, 
	0xff, 0xe3, 0xff, 0xff, 0x9f, 0xb9, 0xff, 0xf0, 0xff, 0xe7, 0xff, 0xff, 0xc7, 0xb9, 0xff, 0xf0, 
	0xff, 0xcf, 0xff, 0xff, 0xe3, 0xb9, 0xff, 0xf0, 0xff, 0x0f, 0xff, 0xff, 0xf9, 0xb9, 0xff, 0xf0, 
	0xfc, 0x3f, 0xff, 0xff, 0xfc, 0x39, 0xff, 0xf0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x39, 0xff, 0xf0, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x39, 0xff, 0xf0, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x39, 0xff, 0xf0, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x39, 0xff, 0xf0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x39, 0xff, 0xf0, 
	0xe7, 0xff, 0xff, 0xff, 0xff, 0x3d, 0xff, 0xf0, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x3d, 0xff, 0xf0, 
	0xe7, 0xff, 0xf8, 0x3f, 0xff, 0x3d, 0xff, 0xf0, 0xe7, 0xff, 0xf0, 0x1f, 0xff, 0x00, 0xff, 0xf0, 
	0xe7, 0xff, 0xe7, 0x8f, 0xfc, 0x00, 0x3f, 0xf0, 0xc7, 0xff, 0xe7, 0xcf, 0xf0, 0x7e, 0x0f, 0xf0, 
	0xc3, 0xff, 0xe4, 0x4f, 0xc3, 0xff, 0xc7, 0xf0, 0xc3, 0xff, 0xe0, 0xcf, 0xcf, 0xff, 0xf3, 0xf0, 
	0x93, 0xff, 0xe1, 0x8f, 0x9f, 0xff, 0xf9, 0xf0, 0x93, 0xff, 0xe0, 0x1f, 0x9f, 0xff, 0xf9, 0xf0, 
	0x93, 0xff, 0xc0, 0x3f, 0x3f, 0xff, 0xf9, 0xf0, 0x93, 0xff, 0x1f, 0xff, 0x3f, 0xff, 0xfc, 0xf0, 
	0x93, 0xfc, 0x3f, 0xff, 0x00, 0x00, 0x01, 0xf0, 0x9b, 0xf8, 0xff, 0xff, 0x80, 0x00, 0x03, 0xf0, 
	0xc9, 0xc1, 0xff, 0xff, 0x9f, 0xff, 0xf9, 0xf0, 0xc0, 0x07, 0xff, 0xff, 0x9f, 0xff, 0xf9, 0xf0, 
	0xf0, 0x3f, 0xff, 0xff, 0xbf, 0xff, 0xf9, 0xf0, 0xf9, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xfd, 0xf0, 
	0xf9, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xfc, 0xf0, 0xf9, 0xff, 0xff, 0xff, 0x3f, 0xe7, 0xfc, 0xf0, 
	0xf9, 0xff, 0xff, 0xff, 0x7f, 0xe7, 0xfc, 0xf0, 0xfd, 0xff, 0xff, 0xfe, 0x7f, 0xe7, 0xfc, 0xf0, 
	0xfc, 0xff, 0xff, 0xfe, 0x7f, 0xe7, 0xbe, 0x70, 0xfc, 0xff, 0xff, 0xfe, 0x7f, 0xe7, 0x9e, 0x70, 
	0xfc, 0xff, 0xff, 0xfe, 0xff, 0xef, 0x9e, 0x70, 0xfc, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x9e, 0x70, 
	0xfc, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x9f, 0x30, 0xfc, 0xff, 0xff, 0xfc, 0xff, 0xe7, 0x9f, 0x30, 
	0xfc, 0xff, 0xff, 0xfd, 0xff, 0xe7, 0x9f, 0x30, 0xfe, 0x67, 0x33, 0x99, 0xff, 0xe7, 0xcf, 0xb0, 
	0xfe, 0x67, 0x33, 0x99, 0xff, 0xe7, 0xcf, 0x90, 0xfe, 0x67, 0x33, 0x99, 0xff, 0xe7, 0xcf, 0x90, 
	0xfe, 0x7f, 0xff, 0xfb, 0xff, 0xe7, 0xcf, 0x90, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 0xe7, 0xcf, 0x90, 
	0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30
};

const unsigned char TokensView::s_tokenMiscIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 
	0xff, 0xfc, 0x00, 0xff, 0xf0, 0x07, 0xff, 0xf0, 0xff, 0xf8, 0x07, 0xff, 0xfe, 0x03, 0xff, 0xf0, 
	0xff, 0xe0, 0x3f, 0xff, 0xff, 0xc7, 0xff, 0xf0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 
	0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x70, 
	0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x30, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x30, 
	0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x30, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 
	0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 
	0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0x8f, 0xf9, 0xff, 0x1f, 0xff, 0x00, 0x0f, 0xff, 0x07, 0xe0, 0x7c, 0x0f, 0xff, 0x00, 
	0x0f, 0xfe, 0x03, 0xc0, 0x7c, 0x07, 0xff, 0x00, 0x0f, 0xfe, 0x03, 0xc0, 0x3c, 0x07, 0xff, 0x00, 
	0x0f, 0xfe, 0x03, 0xc0, 0x3c, 0x07, 0xff, 0x00, 0x0f, 0xfe, 0x03, 0xc0, 0x7c, 0x07, 0xff, 0x00, 
	0x0f, 0xff, 0x07, 0xe0, 0x7c, 0x0f, 0xff, 0x00, 0x0f, 0xff, 0x8f, 0xf1, 0xff, 0x1f, 0xff, 0x00, 
	0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x10, 
	0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 
	0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x30, 
	0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x30, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x30, 
	0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x70, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 
	0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xf0, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xf0, 
	0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xf0, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x83, 0xf0, 
	0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x87, 0xf0, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xf0, 
	0xff, 0x03, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xf0, 0xff, 0x81, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xf0, 
	0xff, 0xc0, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xf0, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xc0, 0x7f, 0xf0, 
	0xff, 0xf8, 0x07, 0xff, 0xfe, 0x01, 0xff, 0xf0, 0xff, 0xfc, 0x00, 0xff, 0xf0, 0x03, 0xff, 0xf0, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 
	0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_screenTimeIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0f, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xf8, 0x01, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0x00, 0x7f, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xc0, 0x3f, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xf0, 0x1f, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xf8, 0x0f, 0xf0, 
	0xfe, 0x3f, 0xff, 0xf0, 0xff, 0xfc, 0x07, 0xf0, 0xfc, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x03, 0xf0, 
	0xfc, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x83, 0xf0, 0xf8, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x81, 0xf0, 
	0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf0, 0xf0, 0x7e, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0xf0, 
	0xe0, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x70, 0xe0, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x70, 
	0xc1, 0xff, 0x07, 0xff, 0xff, 0xff, 0xf8, 0x30, 0xc1, 0xff, 0x81, 0xff, 0xff, 0xff, 0xf8, 0x30, 
	0xc3, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xfc, 0x30, 0x83, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xfc, 0x10, 
	0x83, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xfc, 0x10, 0x87, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xfe, 0x10, 
	0x87, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xfe, 0x10, 0x07, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 
	0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x10, 
	0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x10, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x30, 
	0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x30, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x30, 
	0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x70, 
	0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xf0, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf0, 
	0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x81, 0xf0, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0x83, 0xf0, 
	0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x03, 0xf0, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xf0, 
	0xff, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xf0, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0xf0, 
	0xff, 0xc0, 0x3f, 0xff, 0xff, 0xc0, 0x3f, 0xf0, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0x00, 0x7f, 0xf0, 
	0xff, 0xf8, 0x01, 0xff, 0xf8, 0x01, 0xff, 0xf0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 
	0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_moneyIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0x00, 0x06, 0x00, 0x0f, 0xff, 0xf0, 
	0xff, 0xfc, 0x01, 0xff, 0xf8, 0x03, 0xff, 0xf0, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0x01, 0xff, 0xf0, 
	0xff, 0xe0, 0x3f, 0xff, 0xff, 0xc0, 0x7f, 0xf0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xf0, 
	0xff, 0x83, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xf0, 0xff, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xf0, 
	0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x07, 0xf0, 0xfc, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x83, 0xf0, 
	0xfc, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0xc3, 0xf0, 0xf8, 0x7f, 0xff, 0xe0, 0x7f, 0xff, 0xe1, 0xf0, 
	0xf0, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xf0, 0xf0, 0xf0, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xf0, 0xf0, 
	0xe1, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xf8, 0x70, 0xe1, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xf8, 0x70, 
	0xc3, 0xff, 0xf8, 0x10, 0x81, 0xff, 0xfc, 0x30, 0xc3, 0xff, 0xf8, 0x30, 0x81, 0xff, 0xfc, 0x30, 
	0xc7, 0xff, 0xf0, 0x30, 0xc0, 0xff, 0xfe, 0x30, 0x87, 0xff, 0xf0, 0x30, 0xff, 0xff, 0xfe, 0x10, 
	0x87, 0xff, 0xf0, 0x30, 0xff, 0xff, 0xfe, 0x10, 0x8f, 0xff, 0xf0, 0x30, 0xff, 0xff, 0xff, 0x10, 
	0x8f, 0xff, 0xf8, 0x10, 0xff, 0xff, 0xff, 0x10, 0x0f, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x80, 
	0x1f, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0xc0, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xff, 0xf0, 0xe0, 0xff, 0xff, 0x00, 0x8f, 0xff, 0xff, 0xf0, 0xe0, 0x7f, 0xff, 0x10, 
	0x8f, 0xff, 0xe0, 0x70, 0xe0, 0x7f, 0xff, 0x10, 0x87, 0xff, 0xf0, 0x30, 0xe0, 0xff, 0xfe, 0x10, 
	0x87, 0xff, 0xf0, 0x30, 0xe0, 0xff, 0xfe, 0x10, 0xc7, 0xff, 0xf0, 0x10, 0xc0, 0xff, 0xfe, 0x30, 
	0xc3, 0xff, 0xf8, 0x00, 0x80, 0xff, 0xfc, 0x30, 0xc3, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xfc, 0x30, 
	0xe1, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xf8, 0x70, 0xe1, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xf8, 0x70, 
	0xf0, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xf0, 0xf0, 0xf0, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xf0, 0xf0, 
	0xf8, 0x7f, 0xff, 0xf0, 0xff, 0xff, 0xe1, 0xf0, 0xfc, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0xc3, 0xf0, 
	0xfc, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x83, 0xf0, 0xfe, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0x07, 0xf0, 
	0xff, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xf0, 0xff, 0x83, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xf0, 
	0xff, 0xc0, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xf0, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xc0, 0x7f, 0xf0, 
	0xff, 0xf8, 0x0f, 0xff, 0xff, 0x01, 0xff, 0xf0, 0xff, 0xfc, 0x01, 0xff, 0xf8, 0x03, 0xff, 0xf0, 
	0xff, 0xff, 0x00, 0x06, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 
	0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_okIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x30, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x10, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x10, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x70, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x07, 0xf0, 
	0xf9, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0f, 0xf0, 0xc0, 0x7f, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xf0, 
	0x80, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x80, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xf0, 
	0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xf0, 
	0x00, 0x03, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x07, 0xff, 0xf0, 
	0x80, 0x00, 0xff, 0xf0, 0x00, 0x0f, 0xff, 0xf0, 0x80, 0x00, 0x7f, 0xe0, 0x00, 0x1f, 0xff, 0xf0, 
	0xc0, 0x00, 0x3f, 0xc0, 0x00, 0x3f, 0xff, 0xf0, 0xe0, 0x00, 0x1f, 0x80, 0x00, 0x7f, 0xff, 0xf0, 
	0xf0, 0x00, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xf8, 0x00, 0x06, 0x00, 0x01, 0xff, 0xff, 0xf0, 
	0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 
	0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 
	0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf0, 
	0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

const unsigned char TokensView::s_cancelIcon [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xf0, 
	0xfe, 0x03, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xf0, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x03, 0xf0, 
	0xfc, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xf0, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x01, 0xf0, 
	0xf8, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x01, 0xf0, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x01, 0xf0, 
	0xf8, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x01, 0xf0, 0xfc, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x03, 0xf0, 
	0xfc, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x03, 0xf0, 0xfe, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x07, 0xf0, 
	0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x0f, 0xf0, 0xff, 0x80, 0x00, 0x7f, 0xe0, 0x00, 0x1f, 0xf0, 
	0xff, 0xc0, 0x00, 0x3f, 0xc0, 0x00, 0x3f, 0xf0, 0xff, 0xe0, 0x00, 0x1f, 0x80, 0x00, 0x7f, 0xf0, 
	0xff, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0xff, 0xf0, 0xff, 0xf8, 0x00, 0x06, 0x00, 0x01, 0xff, 0xf0, 
	0xff, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xf0, 
	0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xf0, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xff, 0xf0, 
	0xff, 0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xf0, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 
	0xff, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0xff, 0xf8, 0x00, 0x06, 0x00, 0x01, 0xff, 0xf0, 
	0xff, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0xff, 0xf0, 0xff, 0xe0, 0x00, 0x1f, 0x80, 0x00, 0x7f, 0xf0, 
	0xff, 0xc0, 0x00, 0x3f, 0xc0, 0x00, 0x3f, 0xf0, 0xff, 0x80, 0x00, 0x7f, 0xe0, 0x00, 0x1f, 0xf0, 
	0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x0f, 0xf0, 0xfe, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x07, 0xf0, 
	0xfc, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x03, 0xf0, 0xf8, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x01, 0xf0, 
	0xf8, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x01, 0xf0, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x01, 0xf0, 
	0xf8, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x01, 0xf0, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x01, 0xf0, 
	0xfc, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xf0, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x07, 0xf0, 
	0xff, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

void TokensView::setProfileDelegate(ProfileManagerDelegate* delegate) {
	m_profileDelegate = delegate;
}

bool TokensView::showsDialog() {
    return m_showAuthDialog;
}

void TokensView::showAuthDialog() {
    m_authDialog.reset();
    m_showAuthDialog = true;
    m_cacheView = true;
}

void TokensView::hideAuthDialog(bool pass) {
    m_showAuthDialog = false;
    if (pass)
        m_authPass();
    else
        m_authFail();
}

void TokensView::showConfirmDialog() {
    m_showConfirmDialog = true;
    m_cacheView = true;
}

void TokensView::hideConfirmDialog(bool pass) {
    m_showConfirmDialog = false;
    if (pass)
        m_confirmPass();
    else
        m_confirmFail();
}

void TokensView::create(int width, int height) {
    m_menuSplit.setXYpos(0, 0);
    m_menuSplit.setArea(width, height);
    m_menuSplit.setOffset(100);

    m_headerSplit.setXYpos(0, 0);
    m_headerSplit.setArea(m_menuSplit.getLeftWidth(), height);
    m_headerSplit.setOffset(80);

    m_menuBack.setXYpos(m_menuSplit.getLeftWidth() + 10, 30);
    m_menuBack.setIcon(s_backIcon);
    m_menuBack.setAction([this] () {
        if (m_eventDelegate)
            m_eventDelegate->menuBackToMainPressed();
    });

    m_menuName.setXYpos(m_headerSplit.getXpos()+30, m_headerSplit.getYpos() + 60);
    m_menuName.setFont(&FreeSansBoldOblique24pt7b);
    m_menuName.setText("Tokens");

	m_profileSplit.setXYpos(0, m_headerSplit.getTopHeight());
	m_profileSplit.setArea(m_menuSplit.getLeftWidth(), m_headerSplit.getBottomHeight());

    int p_xbase = m_profileSplit.getXpos();

	const unsigned char* tokenIcons[TokenType::Count] = {
		s_tokenParentHelpIcon,
		s_tokenEducationIcon,
		s_tokenCreativityIcon,
		s_tokenHousekeepingIcon,
		s_tokenMiscIcon
	};

    for (int p = 0; p < m_maxProfileCount; p++) {
		// profile name
	    int p_ybase = m_profileSplit.getYpos();

		m_requestSplit[p].setXYpos(p_xbase, m_headerSplit.getTopHeight());
		m_requestSplit[p].setArea(m_profileSplit.getRightWidth(), m_headerSplit.getBottomHeight());
		m_requestSplit[p].setOffset(130);

        m_names[p].setXYpos(p_xbase + 30, p_ybase + 60);
        m_names[p].setDataProvider([p, this] () -> const char* {
            if (m_profileDelegate) {
                return m_profileDelegate->getName(p);
            }
            return nullptr;
        });

		m_remainTime[p].setXYpos(p_xbase + m_profileSplit.getLeftWidth() - 150, p_ybase + 25);
		m_remainTime[p].setDigitSize(40);
		m_remainTime[p].setDataProvider([p, this] () -> int {
			if (m_profileDelegate)
				return m_profileDelegate->getRemainTime(p);
			return 0;
		});

		int p_btn_ybase = p_ybase + 90;
		for (unsigned int t = 0; t < TokenType::Count; t++) {
			int p_btn_xbase = p_xbase + 30;

			m_requestButton[p][t].setXYpos(p_btn_xbase, p_btn_ybase);
			m_requestButton[p][t].setIcon(tokenIcons[t]);
			
			m_requestButton[p][t].setAction([p, t, this] () {
				if(m_eventDelegate)
					m_eventDelegate->tokenRequest(p, TokenType(t));
			});
			p_btn_xbase += 20 + m_requestButton[p][t].getWidth();
			
			sprintf(m_requestLabelText[t], "Request Token\n\"%s\"", TokenTypeString[t]);

			m_requestLabel[p][t].setXYpos(p_btn_xbase, p_btn_ybase + 35);
			m_requestLabel[p][t].setWidth(m_profileSplit.getLeftWidth() - 60 - m_requestButton[p][t].getWidth());
			m_requestLabel[p][t].setFont(&FreeSansBold12pt7b);
			m_requestLabel[p][t].setTextAlignment(TextAlignment::Left);
			m_requestLabel[p][t].setText(m_requestLabelText[t]);

			m_pendingLabel[p][t].setXYpos(p_btn_xbase, p_btn_ybase + 45);
			m_pendingLabel[p][t].setFont(&FreeSansBold12pt7b);
			m_pendingLabel[p][t].setText("pending");

			p_btn_xbase += 135;

			m_cancelButton[p][t].setXYpos(p_btn_xbase, p_btn_ybase);
			m_cancelButton[p][t].setIcon(s_cancelIcon);
			m_cancelButton[p][t].setAction([p, t, this] () {
				if(m_eventDelegate)
					m_eventDelegate->tokenCancelRequest(p, TokenType(t));
			});
			p_btn_xbase += 10 + m_cancelButton[p][t].getWidth();

			m_approveButton[p][t].setXYpos(p_btn_xbase, p_btn_ybase);
			m_approveButton[p][t].setIcon(s_okIcon);
			m_approveButton[p][t].setAction([p, t, this] () {
                if (m_eventDelegate) {
                    m_authPass = [p, t, this] () {
                        if (m_eventDelegate) {
                            m_eventDelegate->tokenApproveRequest(p, TokenType(t));
                        }
                    };
                    m_authFail = [this] () {
                    };
                    m_eventDelegate->authDialogShow();
                }
			});

			p_btn_ybase += 90;
		}
		p_ybase += m_requestSplit[p].getTopHeight() + 20;

		m_tokens[p].setXYpos(p_xbase + 30, p_ybase + 20);
        m_tokens[p].setDataProvider([p, this] () -> const char* {
            if (m_profileDelegate)
                return m_profileDelegate->getTokensString(p);
            return nullptr;
        });

		m_convertLabel[p].setXYpos(p_xbase + 30 + 130, p_ybase + 35);
		m_convertLabel[p].setWidth(90);
		m_convertLabel[p].setFont(&FreeSansBold12pt7b);
		m_convertLabel[p].setTextAlignment(TextAlignment::Center);
		m_convertLabel[p].setText("convert\nto");

		m_convertToTime[p].setXYpos(p_xbase + m_profileSplit.getLeftWidth() - 30 - 80 - 10 - 80, p_ybase);
		m_convertToTime[p].setIcon(s_screenTimeIcon);
		m_convertToTime[p].setAction([p, this] {
            if (m_eventDelegate) {
                m_confirmPass = [p, this] () {
                    if (m_eventDelegate) {
        				m_eventDelegate->tokenConvertToMins(p);
                    }
                };
                m_confirmFail = [this] () {
                };
                m_eventDelegate->confirmDialogShow();
            }
		});

		m_convertToMoney[p].setXYpos(p_xbase + m_profileSplit.getLeftWidth() - 30 - 80, p_ybase);
		m_convertToMoney[p].setIcon(s_moneyIcon);
		m_convertToMoney[p].setAction([p, this] {
			//
		});

		p_xbase += m_profileSplit.getLeftWidth();
	}

    m_authDialog.setEventDelegate(m_eventDelegate);
    m_authDialog.create(width, height);
    m_authDialog.setHeaderText("Enter PIN");
    m_authDialog.setTextLimit(6);
    m_authDialog.setSecureMode(true);
    m_authDialog.setActions([this] () {
        if (m_eventDelegate)
            m_eventDelegate->authDialogHide(m_authDialog.getText()); 
    },
    [this] () {
        if (m_eventDelegate)
            m_eventDelegate->authDialogHide(nullptr); 
    });

    m_confirmDialog.setEventDelegate(m_eventDelegate);
    m_confirmDialog.create(width, height);
    m_confirmDialog.setHeaderText("Convert token?");
    m_confirmDialog.setActions([this] () {
        if (m_eventDelegate)
            m_eventDelegate->confirmDialogHide(true); 
    },
    [this] () {
        if (m_eventDelegate)
            m_eventDelegate->confirmDialogHide(false); 
    });
}

bool TokensView::render(Inkplate* context) {
    bool renderView = true;
    bool forceCache = false;

    if (m_showAuthDialog || m_showConfirmDialog)
        renderView = false;

    if (m_cacheView) {
        renderView = true;
        forceCache = true;
    }

	if (renderView) {
		m_menuSplit.render(context);
		m_headerSplit.render(context);
		m_menuName.render(context);
		m_menuBack.render(context);
		m_profileSplit.render(context);
		for (int p = 0; p < m_maxProfileCount; p++) {
			if (m_profileDelegate) {
				if (!m_profileDelegate->isActive(p))
					continue;
			}

			m_names[p].render(context);
			m_remainTime[p].render(context);
			for (unsigned int t = 0; t < TokenType::Count; t++) {
				m_requestSplit[p].render(context);
				bool tokenRequested = false;
				if (m_profileDelegate)
					tokenRequested = m_profileDelegate->tokenTypeRequested(p, TokenType(t));
				m_requestButton[p][t].setDisabled(tokenRequested);
				m_requestButton[p][t].render(context);
				if (tokenRequested) {
					m_pendingLabel[p][t].render(context);
					m_cancelButton[p][t].setDisabled(false);
					m_cancelButton[p][t].render(context);
					m_approveButton[p][t].setDisabled(false);
					m_approveButton[p][t].render(context);
				} else {
					m_requestLabel[p][t].render(context);
					m_cancelButton[p][t].setDisabled(true);
					m_approveButton[p][t].setDisabled(true);
				}
			}
			m_tokens[p].render(context);
			int tokens = 0;
			if (m_profileDelegate)
				tokens = m_profileDelegate->getTokens(p);
			m_convertToTime[p].setDisabled(tokens == 0);
			m_convertLabel[p].render(context);
			m_convertToTime[p].render(context);
			m_convertToMoney[p].setDisabled(true);
			m_convertToMoney[p].render(context);
		}

        if (m_cacheView) {
            if (m_showAuthDialog) {
                m_authDialog.clearBackground(context);
                m_authDialog.render(context);
            } else if (m_showConfirmDialog) {
                m_confirmDialog.clearBackground(context);
                m_confirmDialog.render(context);
            }
            m_cacheView = false;
        }
	} else {
        if (m_showAuthDialog) {
    		m_authDialog.render(context);
        } else if (m_showConfirmDialog) {
    		m_confirmDialog.render(context);
        }
	}

	return forceCache;
}

bool TokensView::touch(Inkplate* context) {
    bool res = false;
	if (m_showAuthDialog) {
        res |= m_authDialog.touch(context);
    } else if (m_showConfirmDialog) {
        res |= m_confirmDialog.touch(context);
    } else {
		res |= m_menuBack.touch(context);
		res |= m_menuBack.touch(context);
		for (int p = 0; p < m_maxProfileCount; p++) {
			for (unsigned int t = 0; t < TokenType::Count; t++) {
				res |= m_requestButton[p][t].touch(context);
				res |= m_cancelButton[p][t].touch(context);
				res |= m_approveButton[p][t].touch(context);
			}
			res |= m_convertToTime[p].touch(context);
			res |= m_convertToMoney[p].touch(context);
		}
    }
    return res;
}